//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace vnpost_ocr_system.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class VNPOST_AppointmentEntities : DbContext
    {
        public VNPOST_AppointmentEntities()
            : base("name=VNPOST_AppointmentEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<AdminRole> AdminRoles { get; set; }
        public virtual DbSet<API> APIs { get; set; }
        public virtual DbSet<APIInputParam> APIInputParams { get; set; }
        public virtual DbSet<APIMethod> APIMethods { get; set; }
        public virtual DbSet<APIOutputParam> APIOutputParams { get; set; }
        public virtual DbSet<AuthenticationToken> AuthenticationTokens { get; set; }
        public virtual DbSet<ContactInfo> ContactInfoes { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<District> Districts { get; set; }
        public virtual DbSet<EmailVerification> EmailVerifications { get; set; }
        public virtual DbSet<FormTemplate> FormTemplates { get; set; }
        public virtual DbSet<NotificationMessage> NotificationMessages { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderImage> OrderImages { get; set; }
        public virtual DbSet<OrderStatusDetail> OrderStatusDetails { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<PaymentMethod> PaymentMethods { get; set; }
        public virtual DbSet<PaymentStatu> PaymentStatus { get; set; }
        public virtual DbSet<PersonalPaperType> PersonalPaperTypes { get; set; }
        public virtual DbSet<PhoneVerification> PhoneVerifications { get; set; }
        public virtual DbSet<PostOffice> PostOffices { get; set; }
        public virtual DbSet<Profile> Profiles { get; set; }
        public virtual DbSet<Province> Provinces { get; set; }
        public virtual DbSet<PublicAdministration> PublicAdministrations { get; set; }
        public virtual DbSet<ResetPasswordToken> ResetPasswordTokens { get; set; }
        public virtual DbSet<ServiceTimer> ServiceTimers { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual int Query_Scope_0(string province, Nullable<int> province_limit, string district, Nullable<int> district_limit, string public_administration, Nullable<int> public_administration_limit, string profile, Nullable<int> profile_limit)
        {
            var provinceParameter = province != null ?
                new ObjectParameter("province", province) :
                new ObjectParameter("province", typeof(string));
    
            var province_limitParameter = province_limit.HasValue ?
                new ObjectParameter("province_limit", province_limit) :
                new ObjectParameter("province_limit", typeof(int));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var district_limitParameter = district_limit.HasValue ?
                new ObjectParameter("district_limit", district_limit) :
                new ObjectParameter("district_limit", typeof(int));
    
            var public_administrationParameter = public_administration != null ?
                new ObjectParameter("public_administration", public_administration) :
                new ObjectParameter("public_administration", typeof(string));
    
            var public_administration_limitParameter = public_administration_limit.HasValue ?
                new ObjectParameter("public_administration_limit", public_administration_limit) :
                new ObjectParameter("public_administration_limit", typeof(int));
    
            var profileParameter = profile != null ?
                new ObjectParameter("profile", profile) :
                new ObjectParameter("profile", typeof(string));
    
            var profile_limitParameter = profile_limit.HasValue ?
                new ObjectParameter("profile_limit", profile_limit) :
                new ObjectParameter("profile_limit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Query_Scope_0", provinceParameter, province_limitParameter, districtParameter, district_limitParameter, public_administrationParameter, public_administration_limitParameter, profileParameter, profile_limitParameter);
        }
    
        public virtual int Query_Scope_1(string province_code, string district, Nullable<int> district_limit, string public_administration, Nullable<int> public_administration_limit, string profile, Nullable<int> profile_limit)
        {
            var province_codeParameter = province_code != null ?
                new ObjectParameter("province_code", province_code) :
                new ObjectParameter("province_code", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var district_limitParameter = district_limit.HasValue ?
                new ObjectParameter("district_limit", district_limit) :
                new ObjectParameter("district_limit", typeof(int));
    
            var public_administrationParameter = public_administration != null ?
                new ObjectParameter("public_administration", public_administration) :
                new ObjectParameter("public_administration", typeof(string));
    
            var public_administration_limitParameter = public_administration_limit.HasValue ?
                new ObjectParameter("public_administration_limit", public_administration_limit) :
                new ObjectParameter("public_administration_limit", typeof(int));
    
            var profileParameter = profile != null ?
                new ObjectParameter("profile", profile) :
                new ObjectParameter("profile", typeof(string));
    
            var profile_limitParameter = profile_limit.HasValue ?
                new ObjectParameter("profile_limit", profile_limit) :
                new ObjectParameter("profile_limit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Query_Scope_1", province_codeParameter, districtParameter, district_limitParameter, public_administrationParameter, public_administration_limitParameter, profileParameter, profile_limitParameter);
        }
    
        public virtual int Query_Scope_2(string postal_district_code, string public_administration, Nullable<int> public_administration_limit, string profile, Nullable<int> profile_limit)
        {
            var postal_district_codeParameter = postal_district_code != null ?
                new ObjectParameter("postal_district_code", postal_district_code) :
                new ObjectParameter("postal_district_code", typeof(string));
    
            var public_administrationParameter = public_administration != null ?
                new ObjectParameter("public_administration", public_administration) :
                new ObjectParameter("public_administration", typeof(string));
    
            var public_administration_limitParameter = public_administration_limit.HasValue ?
                new ObjectParameter("public_administration_limit", public_administration_limit) :
                new ObjectParameter("public_administration_limit", typeof(int));
    
            var profileParameter = profile != null ?
                new ObjectParameter("profile", profile) :
                new ObjectParameter("profile", typeof(string));
    
            var profile_limitParameter = profile_limit.HasValue ?
                new ObjectParameter("profile_limit", profile_limit) :
                new ObjectParameter("profile_limit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Query_Scope_2", postal_district_codeParameter, public_administrationParameter, public_administration_limitParameter, profileParameter, profile_limitParameter);
        }
    
        public virtual int Query_Scope_3(Nullable<long> public_administration_location_id, string profile)
        {
            var public_administration_location_idParameter = public_administration_location_id.HasValue ?
                new ObjectParameter("public_administration_location_id", public_administration_location_id) :
                new ObjectParameter("public_administration_location_id", typeof(long));
    
            var profileParameter = profile != null ?
                new ObjectParameter("profile", profile) :
                new ObjectParameter("profile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Query_Scope_3", public_administration_location_idParameter, profileParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
